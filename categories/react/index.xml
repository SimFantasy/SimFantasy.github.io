<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>React on SimFantasy</title><link>http://localhost/categories/react/</link><description>Recent content in React on SimFantasy</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 08 Aug 2024 10:22:25 +0800</lastBuildDate><atom:link href="http://localhost/categories/react/index.xml" rel="self" type="application/rss+xml"/><item><title>Next中的权限管理(六)</title><link>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-6/</link><pubDate>Thu, 08 Aug 2024 10:22:25 +0800</pubDate><guid>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-6/</guid><description>&lt;p>终于来到本系列的最后一篇了，&lt;code>pocketbase&lt;/code>是类似于&lt;code>strapi&lt;/code>的无头CMS(&lt;code>HeadLess&lt;/code>)系统，和&lt;code>firebase&lt;/code>、&lt;code>supabase&lt;/code>也有些类似，只是本地和线上、功能上的区别。&lt;/p>
&lt;p>&lt;code>pocketbase&lt;/code>相比&lt;code>strapi&lt;/code>是更轻快、简单的那种。使用的&lt;code>GO&lt;/code>开发，使用&lt;code>sqlite&lt;/code>作为数据库，服务端只有一个文件。很适合做些博客、小项目、企业展示站点。&lt;/p>
&lt;p>&lt;code>HeadLess&lt;/code>这类系统的好处是提供了完整的权限、通用模型系统，可以快速完成站点的搭建，通过系统提供的&lt;code>API&lt;/code>能快速实现&lt;code>CURD&lt;/code>的功能。&lt;/p></description></item><item><title>Next中的权限管理(五)</title><link>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-5/</link><pubDate>Thu, 08 Aug 2024 10:21:12 +0800</pubDate><guid>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-5/</guid><description>&lt;p>&lt;code>lucia&lt;/code>是一个小众的权限管理工具，适用于多个运行时包括：&lt;code>node&lt;/code>、&lt;code>bun&lt;/code>、&lt;code>deno&lt;/code>、&lt;code>cloudflare workers&lt;/code>，也提供了多个数据库或&lt;code>orm&lt;/code>的适配器。&lt;/p>
&lt;p>&lt;code>lucia&lt;/code>在配置上比&lt;code>auth.js&lt;/code>简单了很多，这也导致了它在功能层面上比&lt;code>auth.js&lt;/code>弱了很多。因为作者理念的关系，&lt;code>lucia&lt;/code>优点和缺点都很明显，我们还是通过项目来看下为什么优缺点都很明显吧。&lt;/p></description></item><item><title>Next中的权限管理(四)</title><link>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-4/</link><pubDate>Thu, 08 Aug 2024 10:20:09 +0800</pubDate><guid>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-4/</guid><description>&lt;p>这篇我们来说说&lt;code>auth.js&lt;/code>，也就是&lt;code>next-auth.js&lt;/code>的&lt;code>v5&lt;/code>版本。这个版本应该是根据&lt;code>next.js 13&lt;/code>出现了&lt;code>App Router&lt;/code>做了调整的版本，然后将之前一些方法做了合并，放到了&lt;code>auth&lt;/code>这个函数上。具体可以查看官方说明：&lt;a href="https://authjs.dev/getting-started/migrating-to-v5#authentication-methods" target="_blank">Authentication methods&lt;/a>&lt;/p>
&lt;p>毕竟是&lt;code>beta&lt;/code>版本，很多东西会出现莫名其妙的错误，所以使用时需谨慎。&lt;/p></description></item><item><title>Next中的权限管理(三)</title><link>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-3/</link><pubDate>Thu, 08 Aug 2024 10:18:51 +0800</pubDate><guid>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-3/</guid><description>&lt;p>这一篇我们一起来看看可能项目中用到最多的&lt;code>next-auth&lt;/code>，&lt;code>next-auth&lt;/code>现在分成了两个版本，一个是&lt;code>next-auth&lt;/code>，当前最后的版本是&lt;code>next-auth@4.24.7&lt;/code>，这个版本很久没变了，算是稳定版吧。另外一个是后面的新版&lt;code>auth.js&lt;/code>，可以从安装的版本可以看出来是个&lt;code>beta&lt;/code>版的，问题会比较多（可能&lt;code>next.js 14&lt;/code>支持好点，&lt;code>next.js 15&lt;/code>基本不能用），&lt;code>auth.js&lt;/code>当前的版本是&lt;code>next-auth@5.0.0-beta.20&lt;/code>。本篇我们来看下稳定版的&lt;code>next-auth&lt;/code>，下篇再来&lt;code>auth.js&lt;/code>。&lt;/p></description></item><item><title>Next中的权限管理(二)</title><link>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-2/</link><pubDate>Thu, 08 Aug 2024 10:17:29 +0800</pubDate><guid>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-2/</guid><description>&lt;p>上一篇讲了使用比较传统的&lt;code>session&lt;/code>进行权限管理的&lt;code>iron-session&lt;/code>，这篇我们来说下通常情况下会用到比较多的第三方的权限管理工具&lt;code>Clerk&lt;/code>，之前也有类似的比如：&lt;code>Auth0&lt;/code>等，可以看下我之前的文章。&lt;/p></description></item><item><title>Next中的权限管理(一)</title><link>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-1/</link><pubDate>Thu, 08 Aug 2024 10:14:58 +0800</pubDate><guid>http://localhost/posts/next%E4%B8%AD%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86-1/</guid><description>&lt;p>Next.js 新版本带了很多新特性，从Next.js 13引入&lt;code>App Router&lt;/code>就和12版本的&lt;code>Pages Router&lt;/code>有了诸多区别，多了很多页面状态&lt;code>not-found&lt;/code>、&lt;code>error&lt;/code>、&lt;code>loading&lt;/code>等，在14中引入了React中的&lt;code>Server Component&lt;/code>，让一些原本需要写到api中的服务端请求，可以直接在服务端组件中直接请求了。NextJs15也马上要出来了，又会有一些新的特性加进来，也很让人期待。&lt;/p></description></item><item><title>React Hooks</title><link>http://localhost/posts/react-hooks/</link><pubDate>Wed, 13 Mar 2024 09:59:29 +0800</pubDate><guid>http://localhost/posts/react-hooks/</guid><description>&lt;p>React使用了多年，但有些hooks用得很少，一直想来一次总结将常见的一些hooks弄明白。笔记内容 基于B站up主刘龙彬的 &lt;code>React hooks 基础入门系列&lt;/code>：&lt;a href="https://www.bilibili.com/video/BV1sV411c7u9/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=7f4a6e354904b6c7b077241f94bcec23" target="_blank">视频地址&lt;/a>&lt;/p></description></item><item><title>Zustand</title><link>http://localhost/posts/zustand/</link><pubDate>Sat, 24 Feb 2024 23:40:06 +0800</pubDate><guid>http://localhost/posts/zustand/</guid><description>&lt;p>Zustand 是一个轻量级、简洁且强大的 React 状态管理库，旨在为 React 项目提供更简单、更灵活的状态管理方式。与其他流行的状态管理库（如 Redux、MobX 等）相比，Zustand 的 API 更加简洁明了，学习成本较低，且无需引入繁琐的中间件和配置。&lt;/p></description></item><item><title>React Hook Form</title><link>http://localhost/posts/react-hook-form/</link><pubDate>Thu, 22 Feb 2024 20:23:49 +0800</pubDate><guid>http://localhost/posts/react-hook-form/</guid><description>&lt;p>&lt;code>react-hook-form&lt;/code>是一个表单管理、验证库。之前有使用过&lt;code>formik&lt;/code>，模板代码过多，效率也较差，所以一直有关注这块的库，现在表单库中&lt;code>react-hook-form&lt;/code>的知名度无疑是最高的，相比阿里的&lt;code>formly&lt;/code>学习成本也低很多。&lt;/p>
&lt;p>参考大神 Vishwas 的油管视频 &lt;a href="https://www.youtube.com/playlist?list=PLC3y8-rFHvwjmgBr1327BA5bVXoQH-w5s" target="_blank">&lt;code>React Hook Form Tutorials&lt;/code>&lt;/a> 教程来入个门&lt;/p></description></item><item><title>React状态横评</title><link>http://localhost/posts/react%E7%8A%B6%E6%80%81%E6%A8%AA%E8%AF%84/</link><pubDate>Thu, 05 Oct 2023 00:41:17 +0000</pubDate><guid>http://localhost/posts/react%E7%8A%B6%E6%80%81%E6%A8%AA%E8%AF%84/</guid><description>&lt;h3 id="从redux说起">从Redux说起&lt;a class="anchorjs-link" href="#%e4%bb%8eredux%e8%af%b4%e8%b5%b7">&lt;/a>&lt;/h3>&lt;p>吐槽：&lt;code>Redux&lt;/code>是&lt;code>React&lt;/code>绕不过的坑，一个据说不是&lt;code>React&lt;/code>专属的状态库（现在大部分js框架都是全家桶的年代），大量模板代码，过于复杂的学习曲线，总让我们感到困扰。&lt;/p>
&lt;p>一个点击计数的&lt;code>state&lt;/code>，在&lt;code>Redux&lt;/code>中通常需要写&lt;code>store/index.js&lt;/code>，&lt;code>store/reducer.js&lt;/code>，&lt;code>store/actionCreator.js&lt;/code>，&lt;code>store/constants.js&lt;/code>四个文件，然后在全局通过&lt;code>Provider&lt;/code>进行连接，在调用的页面还需要通过&lt;code>connect&lt;/code>高阶进行包裹，然后通过props来映射，才能使用。&lt;/p>
&lt;p>异步操作还需要通过第三方&lt;code>redux-thunk&lt;/code>或&lt;code>redux-saga&lt;/code>来实现。&lt;/p>
&lt;p>所以对于这种时常会用到时常会用到但又不想去用的东西我们总是又爱又恨。好在&lt;code>React&lt;/code>的生态是丰富的，总会有更多的好用的工具出现。&lt;/p>
&lt;p>下面我们来看下现在比较流行的&lt;code>RTK&lt;/code>和&lt;code>Zustand&lt;/code>，以及我比较喜欢的&lt;code>Valtio&lt;/code>，通过一个相同的案例（多个状态统一管理、本地计数、异步数据、异步数据传参）对这三个状态库在&lt;strong>功能层面&lt;/strong>上进行比较下，看下各自的优缺点。&lt;/p>
&lt;p>实现方式：通过三个文件来写本地计数&lt;code>store/modules/counter.js&lt;/code>，异步获取数据&lt;code>store/modules/post.js&lt;/code>，异步数据传参&lt;code>store/modules/user.js&lt;/code>。通过&lt;code>store/index.js&lt;/code>来对多个状态进行统一管理导出。&lt;/p>
&lt;p>最终实现效果：&lt;/p>
&lt;p>&lt;figure>
 &lt;a class="paragraph-image">
 &lt;img data-src="https://p.sda1.dev/12/9ee1d5dc474cec7a6c675ada29674278/image.png" data-action="zoom" alt="最终效果" class="lazyload">
 &lt;/a>
 
&lt;/figure>&lt;/p></description></item><item><title>Query Key Factory - React Query 的 QueryKey 查询管理工具</title><link>http://localhost/posts/react-query-key-factory/</link><pubDate>Thu, 18 May 2023 17:47:04 +0000</pubDate><guid>http://localhost/posts/react-query-key-factory/</guid><description>&lt;p>在使用&lt;code>react-query&lt;/code>做了几个项目以后，就感觉&lt;code>react-query&lt;/code>中的查询和请求状态管理非常方便。但逐渐发现对&lt;code>react-query&lt;/code>的使用需求在逐步发生变化：&lt;/p>
&lt;ol>
&lt;li>基本需求就是对异步数据获取的状态进行管理。&lt;/li>
&lt;li>获取到数据，&lt;code>react-query&lt;/code>对数据进行缓存后，需要对缓存数据进行管理。&lt;/li>
&lt;li>当需要进行数据交互通过&lt;code>useMutation&lt;/code>获取到新的数据时，就需要通过之前查询数据的&lt;code>useQuery&lt;/code>的&lt;code>queryKey&lt;/code>修改缓存数据，通过&lt;code>query client&lt;/code>中的&lt;code>setQueryData&lt;/code>来修改缓存，或者使用&lt;code>invalidateQueries&lt;/code>来使对应查询的&lt;code>queryKey&lt;/code>让缓存失效来重新获取数据，最终就变成对&lt;code>queryKey&lt;/code>的管理。&lt;/li>
&lt;/ol></description></item><item><title>React Route 6.4功能</title><link>http://localhost/posts/react-route-6-4%E5%8A%9F%E8%83%BD/</link><pubDate>Thu, 02 Feb 2023 18:23:37 +0000</pubDate><guid>http://localhost/posts/react-route-6-4%E5%8A%9F%E8%83%BD/</guid><description>&lt;p>React Route 最近更新到了6.8，在6.4的版本中增加了一些新功能。应该是借鉴了remix的一些功能吧，毕竟是一个系统的产品。开发中的内卷逐渐在产品中体现了出来。&lt;/p></description></item><item><title>快速生成自己的色板样式模板</title><link>http://localhost/posts/%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90%E8%87%AA%E5%B7%B1%E7%9A%84%E8%89%B2%E6%9D%BF%E6%A0%B7%E5%BC%8F%E6%A8%A1%E6%9D%BF/</link><pubDate>Thu, 12 Jan 2023 11:50:26 +0000</pubDate><guid>http://localhost/posts/%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90%E8%87%AA%E5%B7%B1%E7%9A%84%E8%89%B2%E6%9D%BF%E6%A0%B7%E5%BC%8F%E6%A8%A1%E6%9D%BF/</guid><description>&lt;p>之前有写过文章，使用 &lt;a href="https://simfantasy.github.io/2022/12/14/%E4%BD%BF%E7%94%A8CSS%E5%8F%98%E9%87%8F%E7%BB%99%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/" target="_blank">使用CSS变量给页面添加暗黑模式&lt;/a>，本文算是前面这篇文章的补充吧，每次都要搞一堆不同颜色的色板也很是麻烦，体力活总有办法优化的。&lt;/p>
&lt;p>借助&lt;code>ant-design/colors&lt;/code>这个包，能帮助我们快速实现色板。&lt;/p></description></item><item><title>使用CSS变量给页面添加暗黑模式</title><link>http://localhost/posts/%E4%BD%BF%E7%94%A8css%E5%8F%98%E9%87%8F%E7%BB%99%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/</link><pubDate>Wed, 14 Dec 2022 15:56:09 +0000</pubDate><guid>http://localhost/posts/%E4%BD%BF%E7%94%A8css%E5%8F%98%E9%87%8F%E7%BB%99%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/</guid><description>&lt;p>之前有使用&lt;code>Styled Components&lt;/code>的方式在页面中添加主题 &lt;a href="https://simfantasy.github.io/2022/07/29/Styled-Components-Context-%E6%89%93%E9%80%A0%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/" target="_blank">Styled Components + Context 打造主题切换&lt;/a>，但是过于繁琐和麻烦。于是之前又学习了下&lt;code>Chakra&lt;/code>的暗黑模式，感觉也很麻烦，对于不想用&lt;code>Chakra&lt;/code>框架，这种方式就很麻烦。前两天正好看到B站一小哥说这个用&lt;code>CSS变量&lt;/code>的方式添加暗黑模式，遂学习了下，果然方便太多。&lt;/p></description></item><item><title>ChakraUI 暗黑模式切换</title><link>http://localhost/posts/chakraui-%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2/</link><pubDate>Sat, 03 Dec 2022 14:30:33 +0000</pubDate><guid>http://localhost/posts/chakraui-%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2/</guid><description>&lt;p>使用ChakraUI可以快速切换暗黑模式。并且可以用来做主题切换，提供了一系列的钩子和函数使用起来非常方便。&lt;/p></description></item><item><title>Firebase学习笔记之Auth和storage</title><link>http://localhost/posts/firebase%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bauth%E5%92%8Cstorage/</link><pubDate>Thu, 10 Nov 2022 16:33:22 +0000</pubDate><guid>http://localhost/posts/firebase%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bauth%E5%92%8Cstorage/</guid><description>这里主要记录下Auth这块的使用。功能上基本同之前的NextAuth差不多。但是 Firebase 并不是一个单一的权限系统，和数据等很多功能整合在一起了，所</description></item><item><title>Firebase学习笔记之Firestore</title><link>http://localhost/posts/firebase%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bfirestore/</link><pubDate>Thu, 10 Nov 2022 16:32:52 +0000</pubDate><guid>http://localhost/posts/firebase%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bfirestore/</guid><description>&lt;p>&lt;code>Firebase&lt;/code>是&lt;code>Google&lt;/code>的一个线上数据服务，提供在线的数据库和权限、资源存储等。这次一起来学习一下。&lt;/p>
&lt;p>教程可以参考 The Net Ninja 大神的&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jERUGvbudErNCeSZHWUVlb" target="_blank">Firebase 9 Tutorial&lt;/a>&lt;/p>
&lt;p>因为&lt;code>Firebase&lt;/code>的内容太多，我们分了两个部分。这个部分是数据的&lt;code>CURD&lt;/code>。&lt;/p>
&lt;p>‍&lt;/p></description></item><item><title>Styled-components中使用媒体查询</title><link>http://localhost/posts/styled-components%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/</link><pubDate>Sat, 29 Oct 2022 21:03:46 +0000</pubDate><guid>http://localhost/posts/styled-components%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/</guid><description>&lt;p>&lt;code>styled-components&lt;/code>和&lt;code>emotion&lt;/code>中作媒体查询很麻烦，不如&lt;code>scss&lt;/code>中的&lt;code>mixin&lt;/code>来的简单。从&lt;code>emotion&lt;/code>上找到一个包&lt;code>facepaint&lt;/code>，能在一定程度上优化代码，减少代码量，但也不能像正常写&lt;code>css&lt;/code>那样去写样式了，只能用驼峰的方式写成对象形式的样式。我们来分别看下这三种方式的媒体查询：&lt;/p></description></item><item><title>Auth0身份验证</title><link>http://localhost/posts/auth0%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</link><pubDate>Thu, 27 Oct 2022 11:38:14 +0000</pubDate><guid>http://localhost/posts/auth0%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</guid><description>&lt;p>Auth0是一个第三方身份验证的工具。通过配置可以调用Auth0的注册、登录，配置指定回调地址就可以很快实现身份验证的功能。&lt;/p></description></item><item><title>React Query学习笔记</title><link>http://localhost/posts/react-query%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 21 Oct 2022 14:43:34 +0000</pubDate><guid>http://localhost/posts/react-query%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>&lt;p>终于二刷了 Codevolution 大佬的这个系列，感觉比第一次确实是有了更多的理解。配合之前的&lt;code>foromik&lt;/code>使用杠杠滴~&lt;/p>
&lt;p>教程地址：&lt;a href="https://www.youtube.com/playlist?list=PLC3y8-rFHvwjTELCrPrcZlo6blLBUspd2" target="_blank">React Query Tutorial for Beginners&lt;/a>&lt;/p>
&lt;p>ReactQuery 官方地址：&lt;a href="https://tanstack.com/" target="_blank">ReactQuery&lt;/a>&lt;/p>
&lt;p>部分中文文档地址：&lt;a href="https://cangsdarm.github.io/react-query-web-i18n/" target="_blank">Tanstact Query 中文文档&lt;/a>&lt;/p></description></item><item><title>Formik学习笔记之二</title><link>http://localhost/posts/formik%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/</link><pubDate>Tue, 18 Oct 2022 11:34:02 +0000</pubDate><guid>http://localhost/posts/formik%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/</guid><description>&lt;p>这部分主要是示例练习。将&lt;code>input&lt;/code>、&lt;code>textarea&lt;/code>、&lt;code>select&lt;/code>、&lt;code>radio&lt;/code>、&lt;code>checkbox&lt;/code>、&lt;code>data&lt;/code>封装成&lt;code>Formik&lt;/code>的组件，在使用时简化操作，并在几个简单的案例中使用。&lt;/p>
&lt;p>‍&lt;/p></description></item><item><title>Formik学习笔记之一</title><link>http://localhost/posts/formik%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/</link><pubDate>Tue, 18 Oct 2022 11:33:46 +0000</pubDate><guid>http://localhost/posts/formik%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/</guid><description>&lt;p>继续挖Codevolution大佬的教程。form在很多场景都会用到，最少都是一个登录注册。使用Formik可以大大简化数据收集以及表单验证的过程。油管上大佬教程的地址奉上：&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLC3y8-rFHvwiPmFbtzEWjESkqBVDbdgGu" target="_blank">React Formik Tutorial&lt;/a>&lt;/p>
&lt;p>结合&lt;code>react-query&lt;/code>提交表单数据很犀利。&lt;/p></description></item><item><title>NextJS重新学习之三</title><link>http://localhost/posts/nextjs%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%89/</link><pubDate>Sat, 01 Oct 2022 00:45:09 +0000</pubDate><guid>http://localhost/posts/nextjs%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%89/</guid><description>&lt;p>这个是一个用户身份验证的示例。&lt;/p>
&lt;p>NextJs提供了一个身份验证的库&lt;code>next auth&lt;/code>，使用这个库可以很轻松的做身份验证。&lt;/p>
&lt;p>示例使用Github的用户身份登录。&lt;/p>
&lt;p>由于版本问题，跟视频里说的一些内容有出入。根据官方文档来做了调整，代码做了很多优化，写起来更少了。&lt;/p></description></item><item><title>NextJS重新学习之二</title><link>http://localhost/posts/nextjs%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%8C/</link><pubDate>Sat, 01 Oct 2022 00:44:49 +0000</pubDate><guid>http://localhost/posts/nextjs%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%8C/</guid><description>&lt;p>NextJs学习笔记第二部分。基础知识，接上一篇。&lt;/p></description></item><item><title>NextJS重新学习之一</title><link>http://localhost/posts/nextjs%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%80/</link><pubDate>Sat, 01 Oct 2022 00:44:27 +0000</pubDate><guid>http://localhost/posts/nextjs%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%80/</guid><description>&lt;p>国内的NextJs资料太少了，B站上找了下讲的很少，官网又是一个挂着中文文档的英文文档。在YouTube上找了下，英文的资料还是很多。&lt;/p>
&lt;p>找到了这个&lt;code>Codevolution&lt;/code>大神的教程，79个视频的播放列表。&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLC3y8-rFHvwgC9mj0qv972IO5DmD-H0ZH" target="_blank">Next.js Tutorial for Beginners&lt;/a>&lt;/p>
&lt;p>以下是学习笔记。&lt;/p></description></item><item><title>攒个Icon组件2.0</title><link>http://localhost/posts/%E6%94%92%E4%B8%AAicon%E7%BB%84%E4%BB%B62-0/</link><pubDate>Fri, 19 Aug 2022 23:52:17 +0000</pubDate><guid>http://localhost/posts/%E6%94%92%E4%B8%AAicon%E7%BB%84%E4%BB%B62-0/</guid><description>&lt;p>上周看到vant react版升到了3，发现弄了很多新东西，其中就有将所有的Icon都换成了svg的了。于是研究了下，传统的fonts和css的组合似乎，因为字体文件的存在，打包会影响包体积，所以用svg加上打包工具的Tree Shaking，只需要将用到的图标保留，没用的不打包进去就可以了。另外，svg的矢量显示效果比字体图标显示效果更好，所以，svg将会是以后更多的选择。&lt;/p></description></item><item><title>Styled Components + Context 打造主题切换</title><link>http://localhost/posts/styled-components-context-%E6%89%93%E9%80%A0%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/</link><pubDate>Fri, 29 Jul 2022 10:32:19 +0000</pubDate><guid>http://localhost/posts/styled-components-context-%E6%89%93%E9%80%A0%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/</guid><description>&lt;p>这两天在看&lt;code>Mantine&lt;/code>，里面有自带的主题切换，试了下，感觉过于复杂&lt;code>context&lt;/code>的&lt;code>Privoder&lt;/code>都要包两层，另外&lt;code>Mantine&lt;/code>的css in js 方案使用的是&lt;code>emotion&lt;/code>，过于小众和繁琐，不如在&lt;code>styled-components&lt;/code>中写&lt;code>css&lt;/code>的流畅。所以翻了很久掘金挖宝，果然挖到一宝。Up是椒盐味花生米，使用&lt;code>context&lt;/code>修改&lt;code>styled-components&lt;/code>的&lt;code>GlobalStyle&lt;/code>，并且将配色方案保存在&lt;code>localstorage&lt;/code>中，重启浏览器效果依然得以保存。但是他的方案使用的是&lt;code>redux toolkit&lt;/code>，并且只能切换明亮和暗黑两种主题，我改成了&lt;code>mobx&lt;/code>和多主题，本来想用更轻量的&lt;code>Jotai&lt;/code>状态库来试下的，但是&lt;code>Jotai&lt;/code>还没摸透，等下次吧。&lt;/p></description></item><item><title>攒个Icon组件</title><link>http://localhost/posts/%E6%94%92%E4%B8%AAicon%E7%BB%84%E4%BB%B6/</link><pubDate>Thu, 28 Jul 2022 11:17:17 +0000</pubDate><guid>http://localhost/posts/%E6%94%92%E4%B8%AAicon%E7%BB%84%E4%BB%B6/</guid><description>&lt;p>经常会用到RemixIcon的图标，所以每次都得整半天，所以干脆攒个Icon的组件好了，下次直接用。&lt;/p></description></item><item><title>React Router v6 组件懒加载</title><link>http://localhost/posts/react-router-v6-%E7%BB%84%E4%BB%B6%E6%87%92%E5%8A%A0%E8%BD%BD/</link><pubDate>Wed, 27 Jul 2022 23:34:40 +0000</pubDate><guid>http://localhost/posts/react-router-v6-%E7%BB%84%E4%BB%B6%E6%87%92%E5%8A%A0%E8%BD%BD/</guid><description>&lt;p>还是React Router V6，在v5的时候组件懒加载只需要在路由页面使用&lt;code>lazy&lt;/code>方法&lt;code>import&lt;/code>组件后，然后在App组件外层包一层&lt;code>Suspense&lt;/code>后就可以实现了，在v6里就搞得很麻烦，因为&lt;code>Suspense&lt;/code>包在了每个路由的外面。&lt;/p></description></item><item><title>React Router V6 三级目录跳转</title><link>http://localhost/posts/react-router-v6-%E4%B8%89%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%B7%B3%E8%BD%AC/</link><pubDate>Wed, 27 Jul 2022 23:06:41 +0000</pubDate><guid>http://localhost/posts/react-router-v6-%E4%B8%89%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%B7%B3%E8%BD%AC/</guid><description>&lt;p>之前在做看Coderwhy的网易云音乐的项目时，遇到了一个问题，因为网易云音乐在进入站点后，会从根目录跳转到三级目录下，经过 &lt;code>发现 （Discover）&lt;/code>，到&lt;code>推荐 （recommend）&lt;/code>页面。coderwhy是用的react-router-dom v5的版本，所以使用了react-router-config这个插件，可以render到一个目录下，但react-router-dom v6的版本 react-router-config这个插件就用不了了，只能使用&lt;code>useRoutes&lt;/code>这个来代替之前的集中式路由导航。这个里面并没有render这个方法，一些api也有变化，没有direct，使用Navigate来代替了。总之搞得头很大。&lt;/p>
&lt;p>试了很多方法，v6，在跳转到二级目录后，则不能直接跳转到三级，今天在小破站看到大神介绍v6 的一些功能，受到了一些启发，他是做到页面上的&lt;code>Routes&lt;/code>和&lt;code>Route&lt;/code>路由配置，跟&lt;code>useRoutes&lt;/code>这块的路由还是区别很大，&lt;code>useRouter&lt;/code>这种和&lt;code>vue-router&lt;/code>的配置就很像了。但是还是缺了&lt;code>vue-router&lt;/code>的路由守卫&amp;hellip;&lt;/p></description></item><item><title>Next.js学习笔记</title><link>http://localhost/posts/next-js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 14 Jun 2022 16:11:59 +0000</pubDate><guid>http://localhost/posts/next-js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>&lt;p>最近在学习Next，这是一个与React相关的应用框架。最近需要使用Next做项目，所以跟着视频一起学了些东西，本文作为笔记进行记录。&lt;/p>
&lt;p>因为网络上大多视频，时间比较久远，就导致很多代码的框架、模块的版本发送了很多变化，导致很多功能都发生了很大的变化，当然老的技术你可以学，但是新的还是要学的。比如：最近学了Redux，大多视频讲的都是Redux4.x，结果现在redux官方现在推荐使用ReduxToolkit。东西当然优化了很多，没有原来那么麻烦，但是资料也少啊 ，遇到很多问题，还在摸索。&lt;/p>
&lt;p>出现这种情况的还有React，现在网上很多视频打着2022最新教程，讲着React16.13或者17.x的内容，现在React官方已经到了18.x了。看介绍说是优化了很多性能上的东西，但功能也有些调整，还没来得及了解。&lt;/p></description></item></channel></rss>