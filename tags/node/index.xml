<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Node on SimFantasy</title><link>http://localhost/tags/node/</link><description>Recent content in Node on SimFantasy</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 08 Oct 2023 23:39:26 +0800</lastBuildDate><atom:link href="http://localhost/tags/node/index.xml" rel="self" type="application/rss+xml"/><item><title>Node 16 Egg</title><link>http://localhost/posts/node-egg/</link><pubDate>Sun, 08 Oct 2023 23:39:26 +0800</pubDate><guid>http://localhost/posts/node-egg/</guid><description>&lt;p>&lt;code>egg.js&lt;/code>是阿里旗下基于&lt;code>node.js&lt;/code>和&lt;code>koa&lt;/code>是一个&lt;code>node&lt;/code>企业级应用开发框架，可以帮助开发团队，和开发人员减少成本。
基于&lt;code>koa2&lt;/code>、&lt;code>es6&lt;/code>、&lt;code>es7&lt;/code>使得&lt;code>node&lt;/code>具有更有规范的开发模式，更低的学习成本、更优雅的代码、更少的维护成本。&lt;/p></description></item><item><title>Node 15 Mongoose</title><link>http://localhost/posts/node-mongoose/</link><pubDate>Sun, 08 Oct 2023 23:37:56 +0800</pubDate><guid>http://localhost/posts/node-mongoose/</guid><description>&lt;p>&lt;code>Mongoose&lt;/code> 是一款使用 &lt;code>Javascript&lt;/code> 操作 &lt;code>MongoDB&lt;/code> 的 &lt;code>ORM&lt;/code> 框架。&lt;/p></description></item><item><title>Node 14 Mongodb</title><link>http://localhost/posts/node-mongodb/</link><pubDate>Sun, 08 Oct 2023 23:36:15 +0800</pubDate><guid>http://localhost/posts/node-mongodb/</guid><description>&lt;p>&lt;code>MongoDB&lt;/code> 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的 &lt;code>NoSql&lt;/code> 数据库。他支持的数据结构非常松散，是类似 &lt;code>json&lt;/code> 的 &lt;code>bson&lt;/code> 语法，因此可以存储比较复杂的数据类型。&lt;code>Mongodb&lt;/code> 最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。它的特点是高性能、易部署、易使用，存储数据非常方便。&lt;/p></description></item><item><title>Node 13 日志记录</title><link>http://localhost/posts/node-log/</link><pubDate>Sun, 08 Oct 2023 23:34:43 +0800</pubDate><guid>http://localhost/posts/node-log/</guid><description>&lt;p>使用&lt;code>log4js&lt;/code>来进行项目的日志记录，&lt;code>express&lt;/code>和&lt;code>koa&lt;/code>的&lt;code>morgan&lt;/code>日志记录过于简单，很多东西无法更好的来记录。&lt;/p></description></item><item><title>Node 12 数据验证</title><link>http://localhost/posts/node-validator/</link><pubDate>Sun, 08 Oct 2023 23:33:17 +0800</pubDate><guid>http://localhost/posts/node-validator/</guid><description>&lt;p>数据验证有两个库 &lt;a href="https://github.com/validatorjs/validator.js" target="_blank">&lt;code>validator&lt;/code>&lt;/a> 和 &lt;a href="http://validatejs.org/" target="_blank">&lt;code>validate.js&lt;/code>&lt;/a>&lt;/p>
&lt;p>&lt;code>validator&lt;/code>是一个字符串的验证库，使用上比较简单，但模板代码会比较多，但验证内容上较丰富。&lt;/p>
&lt;p>&lt;code>validator.js&lt;/code>是一个对象的验证库，使用和代码比较简单，但验证内容上不如&lt;code>validate &lt;/code>丰富，一些内容的验证需要自己写正则，但功能比较强大。&lt;/p></description></item><item><title>Node 11 ORM Prisma</title><link>http://localhost/posts/node-prisma/</link><pubDate>Sun, 08 Oct 2023 23:30:42 +0800</pubDate><guid>http://localhost/posts/node-prisma/</guid><description>&lt;p>&lt;code>Prisma&lt;/code> 是一个开源的数据库工具链项目，不仅仅是一个简单的 &lt;code>ORM&lt;/code> 工具。它支持的数据库有 &lt;code>PostgreSQL&lt;/code>、&lt;code>MySQL&lt;/code>、&lt;code>MongoDB&lt;/code>、&lt;code>SQL Server&lt;/code>和&lt;code>SQLite&lt;/code>，示例使用 &lt;code>Koa2 + MySQL&lt;/code> 进行说明。&lt;/p></description></item><item><title>Node 10 ORM Sequelize</title><link>http://localhost/posts/node-sequelize/</link><pubDate>Sun, 08 Oct 2023 23:29:03 +0800</pubDate><guid>http://localhost/posts/node-sequelize/</guid><description>&lt;p>&lt;code>Sequelize&lt;/code> 是一个基于 &lt;code>promise&lt;/code> 的 &lt;code>Node.js ORM&lt;/code>，目前支持 &lt;code>Postgres&lt;/code>、&lt;code>MySQL&lt;/code>、&lt;code>MariaDB&lt;/code>、 &lt;code>SQLite&lt;/code> 以及 &lt;code>Microsoft SQL Server&lt;/code>。它具有强大的事务支持，关联关系, 预读和延迟加载,读取复制等功能。&lt;/p>
&lt;p>&lt;code>Sequelize&lt;/code> 遵从 语义版本控制。 支持 &lt;code>Node v10&lt;/code> 及更高版本以便使用 &lt;code>ES6&lt;/code> 功能。&lt;/p></description></item><item><title>Node 09 其他模块</title><link>http://localhost/posts/node-other-module/</link><pubDate>Sun, 08 Oct 2023 23:23:23 +0800</pubDate><guid>http://localhost/posts/node-other-module/</guid><description>&lt;p>Node除了Express和Koa两个框架，做项目还需要一些其他的模块支持。&lt;/p></description></item><item><title>Node 08 Koa 框架</title><link>http://localhost/posts/node-koa/</link><pubDate>Sun, 08 Oct 2023 23:20:43 +0800</pubDate><guid>http://localhost/posts/node-koa/</guid><description>&lt;p>&lt;code>koa&lt;/code> 是由 &lt;code>Express&lt;/code> 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 &lt;code>Web&lt;/code> 框架。使用 &lt;code>koa&lt;/code> 编写 &lt;code>web&lt;/code> 应用，通过组合不同的 &lt;code>generator&lt;/code>，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。&lt;code>koa&lt;/code> 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 &lt;code>Web&lt;/code> 应用变得得心应手。&lt;/p></description></item><item><title>Node 07 Express 框架</title><link>http://localhost/posts/node-express/</link><pubDate>Sun, 08 Oct 2023 23:19:10 +0800</pubDate><guid>http://localhost/posts/node-express/</guid><description>&lt;p>&lt;code>Express&lt;/code> 是 &lt;code>Node.js&lt;/code> 最受欢迎的 &lt;code>Web&lt;/code> 应用框架之一。它提供了简洁而灵活的方式来构建 &lt;code>Web&lt;/code> 服务器和 &lt;code>API&lt;/code>。&lt;code>Express&lt;/code> 提供了一组强大的工具和功能，使得开发 &lt;code>Web&lt;/code> 应用变得简单而高效。&lt;/p></description></item><item><title>Node 06 Http 服务</title><link>http://localhost/posts/node-http/</link><pubDate>Sun, 08 Oct 2023 23:12:47 +0800</pubDate><guid>http://localhost/posts/node-http/</guid><description>&lt;h3 id="什么是web服务器">什么是web服务器&lt;a class="anchorjs-link" href="#%e4%bb%80%e4%b9%88%e6%98%afweb%e6%9c%8d%e5%8a%a1%e5%99%a8">&lt;/a>&lt;/h3>&lt;p>当应用程序（客户端）需要某一个资源时，可以向一个台服务器，通过Http请求获取到这个资源；提供资源的这个服务器，就是一个Web服务器；&lt;/p></description></item><item><title>Node 05 Stream 流</title><link>http://localhost/posts/node-stream/</link><pubDate>Sun, 08 Oct 2023 23:00:55 +0800</pubDate><guid>http://localhost/posts/node-stream/</guid><description>&lt;p>程序中的&lt;code>stream(流)&lt;/code>可以想象当我们从一个文件中读取数据时，文件的二进制（字节）数据会源源不断的被读取到我们程序中，而这个一连串的字节，就是我们程序中的流。&lt;/p>
&lt;ul>
&lt;li>是连续字节的一种表现形式和抽象概念&lt;/li>
&lt;li>流应该是可读的，也是可写的&lt;/li>
&lt;/ul></description></item><item><title>Node 04 Buffer 类</title><link>http://localhost/posts/node-buffer/</link><pubDate>Sun, 08 Oct 2023 22:51:31 +0800</pubDate><guid>http://localhost/posts/node-buffer/</guid><description>&lt;p>计算机中所有的内容：文字、数字、图片、音频、视频最终都会使用二进制来表示。&lt;/p>
&lt;p>服务器要处理的本地文件类型相对较多，比如某一个保存文本的文件并不是使用 utf-8进行编码的，而是用 GBK，那么我们必须读取到他们的二进制数据，再通过GKB转换成对应的文字。对于服务器端为了做很多的功能，我们必须直接去操作其二进制的数据。所以Node为了可以方便开发者完成更多功能，提供给了我们一个类Buffer，并且它是全局的。&lt;/p>
&lt;p>在服务器端都需要现将本地文件转为Buffer的二进制格式，然后处理完成后再写入到对应的文件中。&lt;/p></description></item><item><title>Node 03 Events 模块</title><link>http://localhost/posts/node-events/</link><pubDate>Sun, 08 Oct 2023 22:48:38 +0800</pubDate><guid>http://localhost/posts/node-events/</guid><description>&lt;p>&lt;code>Node&lt;/code>中的核心&lt;code>API&lt;/code>都是基于异步事件驱动的：&lt;/p>
&lt;ul>
&lt;li>在这个体系中，某些对象（发射器（&lt;code>Emitters&lt;/code>））发出某一个事件；&lt;/li>
&lt;li>我们可以监听这个事件（监听器&lt;code> Listeners&lt;/code>），并且传入的回调函数，这个回调函数会在监听到事件时调用；&lt;/li>
&lt;/ul></description></item><item><title>Node 02 Fs 模块</title><link>http://localhost/posts/node-fs/</link><pubDate>Sun, 08 Oct 2023 22:44:13 +0800</pubDate><guid>http://localhost/posts/node-fs/</guid><description>&lt;p>&lt;code>fs&lt;/code>是&lt;code>File System&lt;/code>的缩写，表示文件系统。&lt;code>node:fs&lt;/code> 模块能够以标准 POSIX 函数为模型的方式与文件系统进行交互。&lt;/p>
&lt;p>所有文件系统操作都具有同步、回调和基于 &lt;code>promise&lt;/code> 的形式，并且可以使用 &lt;code>CommonJS&lt;/code> 语法和 &lt;code>ES6&lt;/code> 模块进行访问。&lt;/p>
&lt;ol>
&lt;li>同步操作文件，代码会被阻塞，当文件操作代码执行完成，从会继续执行后面的代码。&lt;/li>
&lt;li>异步回调函数操作文件，代码不会被阻塞，需要传入回调函数，当获取到结果时，回调函数被执行。&lt;/li>
&lt;li>异步&lt;code>Pormise&lt;/code>操作文件，代码不会被阻塞，通过&lt;code>fs.promises&lt;/code>调用方法操作，会返回一个&lt;code>promise&lt;/code>，可以通过&lt;code>then&lt;/code>、&lt;code>catch&lt;/code>进行处理。&lt;/li>
&lt;/ol></description></item><item><title>Node 01 Path 模块</title><link>http://localhost/posts/node-path/</link><pubDate>Sun, 08 Oct 2023 22:16:48 +0800</pubDate><guid>http://localhost/posts/node-path/</guid><description>&lt;p>path（路径）模块，用于处理文件和目录路径。&lt;/p></description></item></channel></rss>